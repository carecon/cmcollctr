//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace plugin.collctr.cm12.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.7.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%ProgramFiles%\\Client Center for Configuration Manager 2012\\SCCMCliCtrWPF.exe")]
        public string ClientCenterCMD {
            get {
                return ((string)(this["ClientCenterCMD"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("$MissingUpdates = $false;\r\n$FileRenamePending = $false;\r\n$CM12RebootPending = $fa" +
            "lse;\r\n$CM12HardRebootPending = $false;\r\n$PatchRebootPending = $false;\r\n$RebootRe" +
            "quired = $false;\r\n$RunningUpdates = $false;\r\n$UserLoggedOn = $false;\r\n$CCMUpdate" +
            " = get-wmiobject -query \"SELECT * FROM CCM_SoftwareUpdate\" -namespace \"ROOT\\ccm\\" +
            "ClientSDK\";\r\n$CCMAppl = get-wmiobject -query \"SELECT * FROM CCM_Application\" -na" +
            "mespace \"ROOT\\ccm\\ClientSDK\";\r\n$CCMProg = get-wmiobject -query \"SELECT * FROM CC" +
            "M_Program\" -namespace \"ROOT\\ccm\\ClientSDK\";\r\n$CM12RebootPending = ([wmiclass]\'RO" +
            "OT\\ccm\\ClientSDK:CCM_ClientUtilities\').DetermineIfRebootPending().RebootPending;" +
            "\r\n$CM12HardRebootPending = ([wmiclass]\'ROOT\\ccm\\ClientSDK:CCM_ClientUtilities\')." +
            "DetermineIfRebootPending().IsHardRebootPending;\r\n$ComponentRebootPending = if(te" +
            "st-path \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Component Based Servici" +
            "ng\\RebootPending\"){ $true } else { $false }\r\nif(@(((Get-ItemProperty(\"HKLM:\\SYST" +
            "EM\\CurrentControlSet\\Control\\Session Manager\")).$(\"PendingFileRenameOperations\")" +
            ") | where { $_ }).length -ne 0) { $FileRenamePending = $true };\r\nif(@($CCMUpdate" +
            " | where { $_.ComplianceState -eq 0 }).length -ne 0) { $MissingUpdates = $true }" +
            ";\r\nif(@($CCMAppl | where { $_.EvaluationState -eq 11 -or $_.EvaluationState -eq " +
            "12 -or $_.EvaluationState -eq 27 }).length -ne 0) { $RunningUpdates = $true };\r\n" +
            "if(@($CCMProg | where { $_.EvaluationState -eq 14 }).length -ne 0) { $RunningUpd" +
            "ates = $true };\r\nif(@($CCMUpdate | where { $_.EvaluationState -eq 8 -or $_.Evalu" +
            "ationState -eq 9 -or $_.EvaluationState -eq 10  -or $_.EvaluationState -eq 16 })" +
            ".length -ne 0) { $PatchRebootPending = $true };\r\nif(@($CCMUpdate | where { $_.Ev" +
            "aluationState -eq 2 -or $_.EvaluationState -eq 3 -or $_.EvaluationState -eq 4 -o" +
            "r $_.EvaluationState -eq 5 -or $_.EvaluationState -eq 6 -or $_.EvaluationState -" +
            "eq 7 -or $_.EvaluationState -eq 11 }).length -ne 0) { $RunningUpdates  = $true }" +
            ";\r\nif($FileRenamePending -or $CM12RebootPending -or $CM12HardRebootPending -or $" +
            "PatchRebootPending -or $ComponentRebootPending) { $RebootRequired = $true };\r\n$p" +
            "roc = @(gwmi win32_process -Filter \"Name = \'explorer.exe\'\");\r\nif($proc.Length -g" +
            "t 0) { $UserLoggedOn = $true };\r\n$RebootRequired.ToString() + \";\" +$MissingUpdat" +
            "es.ToString() +\";\" + $RunningUpdates.ToString() + \";\" + $UserLoggedOn.ToString()" +
            ";")]
        public string HealthScript {
            get {
                return ((string)(this["HealthScript"]));
            }
        }
    }
}
