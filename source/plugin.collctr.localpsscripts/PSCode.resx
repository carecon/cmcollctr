<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAGBgAAAEACADIBgAARgAAABAQAAABAAgAaAUAAA4HAAAYGAAAAQAgAIgJAAB2DAAAEBAAAAEA
        IABoBAAA/hUAACgAAAAYAAAAMAAAAAEACAAAAAAAQAIAAAAAAAAAAAAAAAEAAAABAAAAAAAAHXbfACJ6
        3gAke90AKn3ZACB74wApgdsALYfaACmA3QA6idcAMoTZACOB5gAkiOYAKorlACmP5QAjie4ALY/pADCP
        5QAqkeQAKJHoADSQ4QA5k+EAMZrnADub5QA1mOgAL5n1ADui6AA2sP4APrf+AEeN0wBOmNcAXpfSAFGZ
        1ABkodQAYqbbAGSs3ABpqd0Ab6vfAG6u3QB4ptAAfLLWAHuz2wB7ttkAfrfYAHS62wB5utoAf7rYAECc
        5ABHnuUAVZziAEKl6ABKp+0ASa7qAFej5gBSqOIAXqvhAFSj6gBZq+wARa/xAEy78ABGtfgAQ7T8AEe/
        /gBQuPAAZarkAGCt5gBsr+EAaqzkAGKq6QB2reAAca/qAGu75wBhse4Acb7gAHy55gBju/IAdrrxAADR
        /gAE0v4AANX9AADa/QAA3f4AGtX+AB7W/gAr2/4ALdn+ACve/gA01/4AOdn/AADh/gAP4P0AE+P9ABfh
        /QAZ5P4AK+D+AC7k/gAz5/0AOOr9AE/G/wBTwfQAVMb7AFLG/wBQzP4AV8z+AEbe/gBJ3f4AV9b7AFjS
        /gBT3f4AWdj7AF/f/gB8wOcAYc73AHDF9AByz/cAeM77AGHZ/gBn3P4Aatr7AGjf/wB/1vcAft77AEPn
        /gBA7P4AS+r+AFPi/gBT5f4AW+7+AE7z/gBT9v4AVfT+AFny/QBh4P4AauH+AGDq/gBj7f4AZu/+AGrv
        /gBz7/4Ade7+AHjv/gBh8f4AZvH+AGrx/gBt8P4AcvD+AHTx/gBw9P4AdPb+AH/y/QB69f4AibnWAIu8
        1QCOv9YAhrjYAIq44gCKwuUAlsLnAITH8ACAx/QAg9L7AI3b+wCQ2PsAnd37AIjk/gCX6f4AkO3+AIby
        /gCC9P4AjfL+AIL7/gCO+P0AnvH+AJ77/gCl7fsAo/X+AKr0/gCz+P4Atvz+ALr5/gC9+/4Avvz+AMH5
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAFRUAAAAAABUVAAAAAAAAABATB0oAAA0RAQAAAAAAAAAHLCkDEg8ELAEAAAAAAAAADCoh
        LxQqLSIEAAAAAAAAAAooHhkeHRggBAAAAAAAAAALKB8aGhoaIQYAAAAAAAAONlU5IxoaGyUuCQAAAABK
        U1ZIP0BEOyYjOi4SAAAVNlxeW0RBQURAQFteVxYAFU0XFTVZSDxEW1JSTE1RAAAAAAAAMlpBWDcAAAAA
        AAAAAAAAAAA0WD4xAAAAAAAAAAAAAAAAMjgwAAAAAAAAAAAAAAAAAAAnVAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAOfPAADhjwAA4A8AAOAPAADgDwAA4A8AAMAHAACAAwAAAAEAAAABAAD4PwAA/D8AAPx/
        AAD+fwAA//8AACgAAAAYAAAAMAAAAAEAIAAAAAAAYAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADFStACBhBYRUKKTMPACAgCAAAAAMAAAAEAAAAAQAAAAAAAAAAAAAAAwAAAAIAAAAFDhwrDAgq
        QxMURmMSGhozBQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIACFE52Ghphk0kbWYNAEkNiJwkk
        NhMADhwJAAAAAwAAAAIAAAACACQkBw0mMw8SMU8dGVB2NhhaikYdX4o7Hlp4EQBAQAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAmc5kFHHOvMyBvwbckcLSdJHKlbxpch0gVRmcqCCk6FgAUFA0JGy0REDpQIBdT
        ezwgZphcJXq0iCaDxZsqkNCMJHGnHSBAQAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmTZkFHmylMyB7
        4/4pi+X2KoPP0yuCvZ0kdKd1G16LTRVKbjoZVX5FIWudYymBuY4qfsW5K4vf7SJ/5v0wpu/AJHOmFwAr
        VQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwYL8EIG2hMSF53ftSxv//L5n1/yaH5Pkwl93VLozDoCiD
        uo8riMCaL5DRvimK4PEjie7+Q7T8/yiA3/8uoeaWI3WkDgCAgAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAYMUkHInOgLSN82/ZXzP7/a+H+/1TG+/8tj+n/J4rn+zGk6OEslOj0I4Ln/ka1+P9n3P7/a+H//yJ6
        3/8qmNhjGWGSBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcOVUGI3ejJyR81+5Pxv//Odn//1Pd
        /v9r4/7/U8H0/yp92f9Fr/H/aN///2Lg/v801/7/aeH+/x123/4db6c0JnOZBQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABAgIACImqVJCJ70+NHv/7/Rt7+/wDQ/v8a1f7/Sd7+/0ne//9J3f7/Ldn+/wTS
        /v8e1v7/Ydn+/yF63fwebqAzIECABgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAFSsGHl2DKSJ3
        y9Q+t/7/U+L+/wDT/v8A1P7/ANT+/wDU/v8A1P7/ANT+/wDU/v8r2/7/WNL+/yN+2/geapY/DTRCDQAA
        AAEAAAABAAAAAAAAAAAAAAAAAAAAAwAAAAQOQFUYIXKaTCeBys02sP7/U+T+/wDX/f8A1/7/ANf+/wDX
        /v8A1/7/ANf+/wDX/f8r3v7/UMz+/ySC2fQjeahnFlNyJg4cHAkAAAAFAAAAAAAAAAAAAAACAAAABA44
        ThcfcJdHLYe1kDeY4/NQzP7/U+b+/wDa/f8A2v7/ANr+/wDa/v8A2v7/ANv+/wDb/v8r4P7/YeD+/yOI
        5v00o9SyJHejXhhMbSMAECAIAAAABQAAAAAAAAADETxVFR9ulEMshrOMZ6bd8J3d+/+p9P7/de3+/0Pn
        /v8u5P7/F+H9/wDd/v8A3f7/AN7+/wDe/v8P4P3/YOr+/1/f/v8mkOj8MpnLrCN2oFkWTGggACsrBgAA
        AAMNTlsOIHKVPCmGsoZeo9vskNj7/6v1/v+N8v7/c+/+/3Xv/v947/7/ee/+/2Pt/v9L6v7/M+f9/xnk
        /v8A4f7/E+P9/2Pt/v9Z2Pv/Jo7l+zCVxqUieKJSFU5qGAAAAAIdc5kjJH+vdlGc1+WD0vv/o/X+/4by
        /v9l7/7/Z+/+/2rv/v9s8P7/bvD+/3Dw/v9z8P7/dfH+/3Tx/v9b7v7/QOz+/zjq/f9q7/7/V9b7/yWP
        5Pkoi76XIX2nOg9XdAskirYqSZnVynjO+/7G+v7/0/v//877///J+v//s/j+/2vy/v9h8f7/YvH+/2Xx
        /v9n8f7/afH+/3Py/v+C9P7/wPn+/9T7///T+///wfn+/2ra+/8nlubzI4i1TyeSwxFUvuUoT57h30+Z
        4fZUo+r/YbHu/3DF9P9/1vf/kO3+/8D5/v979f7/WPL+/1nz/f9b8v7/cPT+/8P7/v+e8f7/l+n+/43b
        +/+Ax/T/drrx/2+u6vtZo+TrO4nQmCZzmQUAAP8BVar/AhE0lwsmV7AoSZ/bfkyg3rpOn+HfUaDl9Yjk
        /v7E+/7/dPb+/07z/v9V9P7/vfv+/6Xt+/9fqen6XKXi6Veb2c9WndmeQXrDUgYXgBsLIpYRAID/AQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAID/AVWq/wIwj78EJYGuE02k4+N+3vv/vvz+/1P2/v+N+f7/uvn+/1ir
        7P01gMFYFHqOCVWq/wIA//8BAP//AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAG1JtBy19wFpJp+39j/j9/577/v+2/P7/cs/3/0eb2ssdhaILAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>